do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==3) then v23=nil;v23=function()local v38=0 -0;local v39;local v40;local v41;local v42;while true do if (v38==((489 + 486) -(392 + 318 + 265))) then v39,v40,v41,v42=v1(v15,v18,v18 + (8 -5));v18=v18 + 4 + 0;v38=768 -(536 + 231);end if (v38==(1 + 0)) then return (v42 * 16777216) + (v41 * (127485 -61949)) + (v40 * (659 -403)) + v39;end end end;v24=nil;v17=4;end if (v17==2) then v21=function()local a=v1(v15,v18,v18);v18=v18 + 1;return a;end;v22=nil;v22=function()local v43=0 + 0;local a;local b;while true do if (v43==(3 -(43 -(24 + 17)))) then return (b * (1493 -(5 + (2109 -(33 + 844))))) + a;end if (v43==0) then a,b=v1(v15,v18,v18 + (1780 -(426 + 361 + 991)));v18=v18 + (1163 -(336 + 724 + 101));v43=1 + 0;end end end;v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "''";else local a=v2(v0(v30,16));if v19 then local v70=0;local b;while true do if (0==v70) then b=v5(a,v19);v19=nil;v70=1;end if (v70==1) then return b;end end else return a;end end end);v17=1;end if (v17==5) then v26=v23;v27=nil;v27=function(...)return {...},v11("#",...);end;v17=6;end if (v17==4) then v24=function()local v44=0 -0;local v45;local v46;while true do if (v44==(0 -0)) then v45=v23();v46=v23();v44=1;end if (v44==1) then return (( -(7 -5) * v20(v46,32)) + ((1 + 0) -0)) * (((1126 -(166 + 956)) -2)^(v20(v46,14 + 7,75 -44) -(885 + 138))) * ((((v20(v46,1 + (0 -0),32 -(9 + (472 -(404 + 65)))) * ((2 + 0)^(119 -87))) + v45)/(2^(36 + 16))) + 1 + 0);end end end;v25=nil;v25=function(v31)local v47=0 + 0;local v48;local v49;while true do if (v47==(1 + 1)) then v49={};for v71=1 -0, #v48 do v49[v71]=v2(v1(v3(v48,v71,v71)));end v47=12 -9;end if (v47==(901 -(437 + 281 + 180))) then return v6(v49);end if (v47==(3 -2)) then v48=v3(v15,v18,(v18 + v31) -(2 -1));v18=v18 + v31;v47=1596 -(910 + 684);end if (v47==(1885 -(445 + 1440))) then v48=nil;if  not v31 then v31=v23();if (v31==0) then return "''";end end v47=(1901 -(395 + 593)) -(258 + (1853 -(1052 + 147)));end end end;v17=5;end if (6==v17) then v28=nil;v28=function()local v50=0 -0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50==(3 + 1)) then while true do if (v51==(2 -1)) then local v80=0 + 0;while true do if ((968 -(306 + 662))~=v80) then else v54=nil;v55=nil;v80=1 + 0;end if (v80==(47 -(39 + 7))) then v51=2;break;end end end if (v51~=(4 -1)) then else v58=nil;while true do local v83=0;local v84;while true do if (v83~=0) then else v84=0 + 0;while true do if (v84~=(939 -(543 + 396))) then else if (v52~=(1200 -(541 + 656))) then else local v85=0 -0;while true do if (v85==(0 + 0)) then for Idx=1,v23() do v54[Idx-1]=v28();end for Idx=1 + 0,v23() do v55[Idx]=v23();end v85=1 + 0;end if ((1 + 0)~=v85) then else return v56;end end end if (v52==(0 + 0)) then local v86=665 -(505 + 160);local v87;while true do if (v86==0) then v87=623 -(596 + 27);while true do if (v87==(0 + 0)) then local v110=1577 -(1523 + 54);while true do if (v110~=0) then else v53={};v54={};v110=1;end if (v110==(2 -1)) then v87=1437 -(819 + 617);break;end end end if ((703 -(262 + 440))==v87) then v55={};v52=1505 -(70 + 1434);break;end end break;end end end v84=2 -1;end if (v84==(1 + 0)) then if ((1 + 0)==v52) then local v88=0 -0;while true do if (v88==1) then v58={};v52=2;break;end if (v88==0) then local v91=0 -0;while true do if (v91~=0) then else v56={v53,v54,nil,v55};v57=v23();v91=3 -2;end if (v91==(1 + 0)) then v88=2 -1;break;end end end end end if ((2 + 0)~=v52) then else local v89=253 -(61 + 192);local v90;while true do if (v89==0) then v90=0 + 0;while true do if (v90~=(1 + 0)) then else for Idx=1,v23() do local v117=0 -0;local v118;local v119;while true do if (v117~=(1 + 0)) then else while true do if (v118==(1599 -(250 + 1349))) then v119=v21();if (v20(v119,1 + 0,125 -(17 + 107))==(0 + 0)) then local v127=0;local v128;local v129;local v130;local v131;while true do if ((765 -(721 + 42))~=v127) then else while true do if (v128==(5 -3)) then if (v20(v130,882 -(388 + 493),3 -2)==(1 -0)) then v131[4 -2]=v58[v131[2 + 0]];end if (v20(v130,194 -(24 + 168),1 + 1)~=1) then else v131[4 -1]=v58[v131[8 -5]];end v128=3;end if (v128~=(1 + 0)) then else local v134=0 + 0;while true do if (v134==(1815 -(1265 + 550))) then local v137=0 -0;while true do if (v137==(0 + 0)) then v131={v22(),v22(),nil,nil};if (v129==(0 + 0)) then local v139=0 -0;local v140;local v141;while true do if (v139~=(1701 -(735 + 966))) then else v140=0 -0;v141=nil;v139=1 + 0;end if (v139~=1) then else while true do if (v140==(644 -(283 + 361))) then v141=556 -(290 + 266);while true do if ((1867 -(215 + 1652))==v141) then v131[1227 -(905 + 319)]=v22();v131[4]=v22();break;end end break;end end break;end end elseif (v129==(1 + 0)) then v131[3]=v23();elseif (v129==(605 -(441 + 162))) then v131[1 + 2]=v23() -((1 + 1)^(1937 -(1371 + 550)));elseif (v129==(7 -4)) then local v142=0;local v143;local v144;while true do if (v142==0) then v143=1493 -(1395 + 98);v144=nil;v142=1 + 0;end if (v142==(725 -(438 + 286))) then while true do if (v143==0) then v144=0;while true do if (v144==0) then v131[2 + 1]=v23() -((7 -5)^(5 + 11));v131[2 + 2]=v22();break;end end break;end end break;end end end v137=1 -0;end if (v137==(1116 -(315 + 800))) then v134=1 + 0;break;end end end if (v134==(161 -(9 + 151))) then v128=148 -(70 + 76);break;end end end if (v128==(0 -0)) then local v135=0 -0;while true do if ((0 -0)~=v135) then else v129=v20(v119,2,1 + 2);v130=v20(v119,4,6);v135=2 -1;end if (v135==(1184 -(246 + 937))) then v128=52 -(49 + 2);break;end end end if (v128==(1460 -(1182 + 275))) then if (v20(v130,3,1577 -(1126 + 448))==(1 -0)) then v131[19 -15]=v58[v131[4]];end v53[Idx]=v131;break;end end break;end if (v127==(1 + 0)) then v130=nil;v131=nil;v127=131 -(6 + 123);end if (v127~=(0 + 0)) then else v128=86 -(48 + 38);v129=nil;v127=1;end end end break;end end break;end if (v117==(0 -0)) then v118=0 + 0;v119=nil;v117=3 -2;end end end v52=2 + 1;break;end if (v90~=(0 -0)) then else local v111=0 + 0;while true do if (v111~=(0 + 0)) then else for Idx=1,v57 do local v120=0 + 0;local v121;local v122;local v123;local v124;local v125;while true do if (v120==(1864 -(108 + 1754))) then v125=nil;while true do if (v121==(1463 -(123 + 1340))) then v122=496 -(226 + 270);v123=nil;v121=1;end if (v121==(1 + 0)) then local v133=231 -(44 + 187);while true do if (v133==(1 -0)) then v121=3 -1;break;end if (v133==(0 -0)) then v124=nil;v125=nil;v133=2 -1;end end end if (v121~=(1 + 1)) then else while true do if (v122~=(1 + 0)) then else v125=nil;while true do if (v123~=0) then else local v136=947 -(701 + 246);while true do if (v136~=(1694 -(835 + 859))) then else local v138=0;while true do if (v138~=(165 -(154 + 11))) then else v124=v21();v125=nil;v138=3 -2;end if (v138~=1) then else v136=1 + 0;break;end end end if (v136~=(843 -(783 + 59))) then else v123=1 + 0;break;end end end if (v123==(1 + 0)) then if (v124==(1 -0)) then v125=v21()~=(0 -0);elseif (v124==(2 + 0)) then v125=v24();elseif (v124~=(841 -(404 + 434))) then else v125=v25();end v58[Idx]=v125;break;end end break;end if (v122==(0 + 0)) then v123=567 -(111 + 456);v124=nil;v122=543 -(503 + 39);end end break;end end break;end if (v120~=(0 -0)) then else v121=0;v122=nil;v120=1 + 0;end if (v120~=(3 -2)) then else v123=nil;v124=nil;v120=5 -3;end end end v56[5 -2]=v21();v111=1 + 0;end if (v111~=(1601 -(1345 + 255))) then else v90=1 + 0;break;end end end end break;end end end break;end end break;end end end break;end if (v51==(0 -0)) then local v81=0 + 0;while true do if (v81==(908 -(859 + 48))) then v51=1 + 0;break;end if (v81~=(0 -0)) then else v52=0;v53=nil;v81=594 -(534 + 59);end end end if (v51==(2 + 0)) then local v82=0 + 0;while true do if (v82==(2 -1)) then v51=8 -5;break;end if (v82==(0 + 0)) then v56=nil;v57=nil;v82=1;end end end end break;end if ((1 + 0)~=v50) then else v53=nil;v54=nil;v50=366 -(158 + 206);end if (v50==(1471 -(1107 + 362))) then v55=nil;v56=nil;v50=1690 -(538 + 1149);end if (v50==(0 -0)) then v51=0;v52=nil;v50=2 -1;end if (v50==(37 -(21 + 13))) then v57=nil;v58=nil;v50=12 -8;end end end;v29=nil;v17=7;end if (v17==1) then v20=nil;v20=function(v32,v33,v34)if v34 then local v62=0 -(0 -0);local v63;while true do if (v62==0) then v63=(v32/((40 -(12 + 26))^(v33-(2 -(1 + 0)))))%((3 -1)^(((v34-((2 -1) + 0)) -(v33-(1 + 0))) + 1 + 0));return v63-(v63%(1 + 0));end end else local v64=(2 + 0)^(v33-(1234 -(1149 + 84)));return (((v32%(v64 + v64))>=v64) and (1 + 0)) or (0 -0);end end;v21=nil;v17=2;end if (7==v17) then v29=function(v35,v36,v37)local v59=v35[1];local v60=v35[2];local v61=v35[3];return function(...)local v65=1;local v66= -1;local v67={...};local v68=v11("#",...) -1;local function v69()local v59=v59;local v60=v60;local v61=v61;local v27=v27;local v72={};local v73={};local v74={};for Idx=0 + 0,v68 do if ((2562>=(2945 -(460 + 58))) and (Idx>=v61)) then v72[Idx-v61]=v67[Idx + 1];else v74[Idx]=v67[Idx + (1 -0)];end end local v75=(v68-v61) + 1;local Inst;local v76;while true do local v78=1980 -(161 + 1819);local v79;while true do if ((v78==(752 -(669 + 83))) or ((4040 -(20 + 164))<=941)) then v79=(0 -0) + 0;while true do if (((664 + 782)<=(4429 -(489 + 1179))) and ((1 + 0)==v79)) then if (((301 + 37)<=(2919 -(13 + 24))) and (v76<=9)) then if (((232 + 117 + 1041)<=(2697 -(1764 -970))) and (v76<=(16 -12))) then if ((3849>=(484 -(205 + 37))) and (v76<=(1 -0))) then if ((4961>(1522 + 2831)) and (v76>0)) then v74[Inst[2 + 0]][Inst[535 -(204 + 328)]]=v74[Inst[628 -(184 + (2282 -(1752 + 90)))]];else v74[Inst[2]]=v74[Inst[3 + 0]];end elseif ((630<(5290 -(765 + 375))) and (v76<=(1367 -(175 + 1190)))) then local v92=0;local v93;local v94;while true do if (((2501 -(109 + 46))<=2737) and (v92==0)) then v93=308 -(251 + 57);v94=nil;v92=1 -0;end if ((v92==(2 -1)) or (3298<=(3027 -1326))) then while true do if ((v93==(0 + 0)) or (1191<=(1259 -592))) then v94=Inst[1 + 1];v74[v94]=v74[v94]();break;end end break;end end elseif ((v76==(1588 -(235 + 1350))) or ((3073 -1559)==(2085 -(682 + 78)))) then v74[Inst[9 -7]]=v29(v60[Inst[1386 -(191 + 1192)]],nil,v37);elseif ( not v74[Inst[2 + (989 -(92 + 897))]] or ((8428 -5641)<(1600 -(1096 + 18 + 257)))) then v65=v65 + (1 -0);else v65=Inst[637 -(624 + 10)];end elseif ((v76<=6) or (1803>3380)) then if (((1914 + 958)>=1249) and (v76==(16 -11))) then local v95=821 -(379 + 442);local v96;local v97;while true do if ((((1141 -846) + 121)<=(8351 -5838)) and ((1793 -(698 + 1007 + 87))==v95)) then while true do if (((607 + 2205)<=(9769 -6134)) and (v96==(0 + (0 -0)))) then v97=Inst[1 + 1];v74[v97]=v74[v97](v12(v74,v97 + 1 + 0,v66));break;end end break;end if (((10061 -(1626 + 5093))>=(1413 -(426 + 7))) and (v95==(0 -0))) then v96=0 + 0;v97=nil;v95=1401 -(423 + 977);end end else local v98=0 + 0;local v99;while true do if ((v98==(0 + 0)) or ((2777 -(703 + 182))>(5092 -2219))) then v99=Inst[(1976 -(1550 + 424)) + 0];v74[v99](v12(v74,v99 + 1 + 0,Inst[10 -(1526 -(96 + 1423))]));break;end end end elseif ((v76<=(1 + 6)) or ((623 + 2664)<=(713 + 401 + 603))) then do return;end elseif ((4306>=3832) and (v76>(538 -(453 + 77)))) then v74[Inst[(6 -4) + 0]]=Inst[5 -(162 -(4 + 156))];else v74[Inst[348 -(190 + 156)]]();end elseif ((v76<=(1207 -(745 + 448))) or ((5131 -3726)>(3609 -(579 + 208)))) then if ((v76<=11) or ((2951 -1799)<(405 + 211))) then if ((v76>10) or (4152<=1918)) then local v100=(1073 -(423 + 650)) + 0;local v101;while true do if (((1468 + (4067 -(902 + 293)))>=(4265 -(325 + 280))) and (v100==(0 + 0 + 0))) then v101=Inst[1 + 1];v74[v101](v74[v101 + (116 -(102 + 13))]);break;end end else local v102=0 -0;local v103;local v104;local v105;local v106;local v107;while true do if ((v102==(2 -1)) or (((1559 -(1123 + 95)) -221)>=((1660 -658) + 162))) then v105=nil;v106=nil;v102=4 -(3 -1);end if ((v102==((757 -(233 + 524)) + 0)) or (2235<(320 + 1168))) then v103=0 + 0;v104=nil;v102=1 + 0;end if ((v102==(2 + 0)) or ((1797 -(543 + 416))<=(435 + 209))) then v107=nil;while true do if ((v103==(1142 -(8 + 62 + 1070))) or ((4888 -(242 + 1694))>(2344 + (2905 -1546)))) then for Idx=v104,v66 do local v126=0 + 0;while true do if (((1455 + 2170)<=((18825 -5895) -8681)) and (v126==(783 -(30 + 753)))) then v107=v107 + ((2059 -(1060 + 275)) -(429 + 294));v74[Idx]=v105[v107];break;end end end break;end if ((652>=(830 -229)) and (v103==((2788 -(966 + 129)) -(1187 + 505)))) then v66=(v106 + v104) -(1139 -(612 + 526));v107=0;v103=(473 + 147) -(569 + 49);end if (((8670 -3750)>=(9649 -4894)) and (v103==0)) then v104=Inst[6 -4];v105,v106=v27(v74[v104](v12(v74,v104 + (2 -1),Inst[8 -5])));v103=1 + (0 -0);end end break;end end end elseif ((v76<=(43 -31)) or (2432==(246 + 188))) then if (v74[Inst[200 -(172 + 26)]] or (((6065 -(700 + 216)) -(280 + 1093))==(5578 -(638 + 189)))) then v65=v65 + (2 -(2 -1));else v65=Inst[6 -3];end elseif ((v76==(40 -27)) or ((154 -102)>=1207)) then v74[Inst[7 -5]]=v74[Inst[3]][Inst[6 -2]];else local v112=0;local v113;local v114;local v115;local v116;while true do if (((6034 -(4177 -(129 + 698)))>=(194 + 24)) and (v112==2)) then while true do if ((v113==(1 + 0)) or ((446 + 730)>=4901)) then v116=nil;while true do if ((v114==1) or (475==1490)) then v74[v115 + 1 + 0]=v116;v74[v115]=v116[Inst[3 + 1]];break;end if ((v114==(0 -0)) or ((11798 -(33045 -24241))>=((10076 -2905) -3094))) then local v132=231 -(8 + 29 + 194);while true do if (((2077 + 1743)>=(2235 + 243)) and (v132==(1308 -(1297 + 11)))) then v115=Inst[2 + 0];v116=v74[Inst[(19 + 1481) -(389 + 1108)]];v132=1 + 0;end if (((1824 + 2622)>((5137 -(149 + 285)) -(1756 + 47))) and (v132==1)) then v114=1745 -(825 + 45 + 874);break;end end end end break;end if (((3584 -(1050 + 376))<=3210) and (v113==(0 + 0))) then v114=1803 -(520 + 1283);v115=nil;v113=1 + (1591 -(1220 + 371));end end break;end if ((v112==((1596 -(925 + 62)) -(236 + 372))) or ((2029 -((1033 -(141 + 810)) + 508))>(2377 + 538))) then v115=nil;v116=nil;v112=1614 -(1510 + 102);end if (((4811 -(1094 + 243))==(4394 -920)) and (v112==(0 + 0))) then v113=1522 -(119 + 1403);v114=nil;v112=2 -1;end end end elseif (((660 + 70)<=(1489 + (1775 -1001))) and (v76<=(32 -16))) then if (((9049 -5671)>=239) and (v76>(2 + 11 + (3 -1)))) then v74[Inst[2]]={};else v65=Inst[1978 -(1811 + 164)];end elseif ((v76<=(5 + (30 -18))) or ((2487 -(166 + 325))>=4408)) then local v108=0 + 0;local v109;while true do if ((v108==((0 -0) + 0)) or ((3858 -(213 + 12))<=1211)) then v109=Inst[1 + 1];v74[v109]=v74[v109](v12(v74,v109 + (482 -(70 + 411)),Inst[1 + 2]));break;end end elseif (((277 + 502)==(1919 -(814 + 326))) and (v76>18)) then v74[Inst[2]]=v37[Inst[3]];else v74[Inst[5 -3]][Inst[3 + 0]]=Inst[4];end v65=v65 + 1;break;end if ((v79==(0 -0)) or (1592==(176 + 262))) then Inst=v59[v65];v76=Inst[1 -0];v79=1 + 0 + 0;end end break;end end end end A,B=v27(v10(v69));if  not A[1] then local v77=v35[4][v65] or "?";error("Script error at ["   .. v77   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end;return v29(v28(),{},v16)(...);end end end vv8(),...);end
